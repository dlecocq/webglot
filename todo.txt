1. Determine option-passing (GL_DOUBLE, GL_RGBA, etc.) in WebGL context creation
2. Determine how JavaScript does its timing, both for framerate counting and for time dependence in the rendered primitives.
	Completed, though it only prints the result to the console
3. Determine how typecasting works in JavaScript (see grid_dl_gen)
	I don't believe this is important
4. Add in support for display options
5. Determine how callbacks will work in WebGL - do they have to be manually handled in the html? With "onclick", etc?
6. Determine if JavaScript supports inheritance
	Yes, it does, and now the primitives inherit from a primitive class.
7. Add in support for refresh_dls
	It's in there, and it SHOULD work, but I need to come back to this
8. Determine if JavaScript allows for JavaScript source to include other source.  Basically, the JavaScript analog of "#include <...>"
9. How does the equivalent of glutMainLoop work?
	WebGL appears to be a discrete model, with request for redrawing made explicitly from the script.
10. Add grapher.js agnosticism for adding primitives to render.
	Done.  It now uses the grapher::add-style interface for adding primitives, and each primitive nows how to draw itself.
11. Include color definitions for primitives, excepting scalar_fields, of course.
12. Support moving stuff around.  When you do, make sure that each of the primitives updates.
13. Add support for JIT compiling of shader programs that allows for arbitrary user-defined functions.
	Bingo
14. Support alternative coordinate systems
15. Add support for the grid and axes