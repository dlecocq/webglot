);
}

void main() {

	float alpha;

	int i;
	
	int count;
	count = 100;
	
	float step;
	float dalpha;
	
	dalpha = 1.0 / count;
	step = 0.08;
	
	alpha = dalpha;
	
	float x;
	float y;
	float t;
	
	x = gl_PositionIn[0].x;
	y = gl_PositionIn[0].y;
	t = gl_PositionIn[0].z;
	
	gl_FrontColor = vec4(1.0, 0.0, 0.0, alpha);
	gl_Position = gl_ModelViewProjectionMatrix * vec4(x, y, 0.0, 1.0);
	EmitVertex();
	
	vec2 d;
	
	for (i = 0; i < count; ++i) {
		d = function(x, y) * step;
		x = x + d.x;
		y = y + d.y;
		alpha += dalpha;
		gl_FrontColor = vec4(1.0, 0.0, 0.0, alpha);
		gl_Position = gl_ModelViewProjectionMatrix * vec4(x, y, 0.0, 1.0);
		EmitVertex();
	}
		
	EndPrimitive();
}
